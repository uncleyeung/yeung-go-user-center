// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"github.com/uncleyeung/yeung-go-user-center/rpc/user/internal/logic"
	"github.com/uncleyeung/yeung-go-user-center/rpc/user/internal/svc"
	"github.com/uncleyeung/yeung-go-user-center/rpc/user/user"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) UserAdd(ctx context.Context, in *user.UserAddReq) (*user.UserAddResp, error) {
	l := logic.NewUserAddLogic(ctx, s.svcCtx)
	return l.UserAdd(in)
}

func (s *UserServiceServer) UserSelectById(ctx context.Context, in *user.GetByIdReq) (*user.UserGetByIdResp, error) {
	l := logic.NewUserSelectByIdLogic(ctx, s.svcCtx)
	return l.UserSelectById(in)
}

func (s *UserServiceServer) UserUpdate(ctx context.Context, in *user.UserUpdateReq) (*user.UserUpdateResp, error) {
	l := logic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

func (s *UserServiceServer) UserDelete(ctx context.Context, in *user.GetByIdReq) (*user.UserDeleteResp, error) {
	l := logic.NewUserDeleteLogic(ctx, s.svcCtx)
	return l.UserDelete(in)
}

func (s *UserServiceServer) UserAccountSelectById(ctx context.Context, in *user.GetByIdReq) (*user.AccountResp, error) {
	l := logic.NewUserAccountSelectByIdLogic(ctx, s.svcCtx)
	return l.UserAccountSelectById(in)
}

func (s *UserServiceServer) UserAccountSelectByUserId(ctx context.Context, in *user.GetByIdReq) (*user.AccountResp, error) {
	l := logic.NewUserAccountSelectByUserIdLogic(ctx, s.svcCtx)
	return l.UserAccountSelectByUserId(in)
}

func (s *UserServiceServer) UserAccountUpdate(ctx context.Context, in *user.AccountUpdateReq) (*user.AccountUpdateResp, error) {
	l := logic.NewUserAccountUpdateLogic(ctx, s.svcCtx)
	return l.UserAccountUpdate(in)
}

func (s *UserServiceServer) UserAddressUpdate(ctx context.Context, in *user.AddressUpdateReq) (*user.AddressResp, error) {
	l := logic.NewUserAddressUpdateLogic(ctx, s.svcCtx)
	return l.UserAddressUpdate(in)
}

func (s *UserServiceServer) UserAddressSelectByUserId(ctx context.Context, in *user.GetByIdReq) (*user.AddressListResp, error) {
	l := logic.NewUserAddressSelectByUserIdLogic(ctx, s.svcCtx)
	return l.UserAddressSelectByUserId(in)
}

func (s *UserServiceServer) UserAddressAdd(ctx context.Context, in *user.AddressUpdateReq) (*user.AddressResp, error) {
	l := logic.NewUserAddressAddLogic(ctx, s.svcCtx)
	return l.UserAddressAdd(in)
}
